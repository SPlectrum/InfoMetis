apiVersion: v1
kind: Namespace
metadata:
  name: infometis
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nifi-database-pvc
  namespace: infometis
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nifi-flowfile-pvc
  namespace: infometis
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nifi-content-pvc
  namespace: infometis
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nifi-provenance-pvc
  namespace: infometis
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nifi-input-pvc
  namespace: infometis
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nifi-output-pvc
  namespace: infometis
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nifi
  namespace: infometis
  labels:
    app: nifi
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nifi
  template:
    metadata:
      labels:
        app: nifi
    spec:
      containers:
      - name: nifi
        image: apache/nifi:1.23.2
        ports:
        - containerPort: 8080
          name: web-ui
        env:
        - name: SINGLE_USER_CREDENTIALS_USERNAME
          value: "admin"
        - name: SINGLE_USER_CREDENTIALS_PASSWORD
          value: "adminpassword"
        - name: NIFI_WEB_HTTP_PORT
          value: "8080"
        - name: NIFI_WEB_HTTPS_PORT
          value: ""
        - name: NIFI_WEB_PROXY_HOST
          value: "localhost:8080,nifi-service:8080,localhost:30080,nifi.local"
        volumeMounts:
        - name: nifi-input
          mountPath: /opt/nifi/input
        - name: nifi-output
          mountPath: /opt/nifi/output
        - name: nifi-database
          mountPath: /opt/nifi/nifi-current/database_repository
        - name: nifi-flowfile
          mountPath: /opt/nifi/nifi-current/flowfile_repository
        - name: nifi-content
          mountPath: /opt/nifi/nifi-current/content_repository
        - name: nifi-provenance
          mountPath: /opt/nifi/nifi-current/provenance_repository
        livenessProbe:
          httpGet:
            path: /nifi
            port: 8080
          initialDelaySeconds: 300
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 5
      volumes:
      - name: nifi-input
        persistentVolumeClaim:
          claimName: nifi-input-pvc
      - name: nifi-output
        persistentVolumeClaim:
          claimName: nifi-output-pvc
      - name: nifi-database
        persistentVolumeClaim:
          claimName: nifi-database-pvc
      - name: nifi-flowfile
        persistentVolumeClaim:
          claimName: nifi-flowfile-pvc
      - name: nifi-content
        persistentVolumeClaim:
          claimName: nifi-content-pvc
      - name: nifi-provenance
        persistentVolumeClaim:
          claimName: nifi-provenance-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: nifi-service
  namespace: infometis
  labels:
    app: nifi
spec:
  selector:
    app: nifi
  ports:
  - name: web-ui
    port: 8080
    targetPort: 8080
  type: ClusterIP